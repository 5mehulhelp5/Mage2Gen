#!/usr/bin/env python3
import sys
import cmd
import inspect
import mage2gen
import mage2gen.snippets
from collections import defaultdict


class Mage2Gen(cmd.Cmd):
	prompt = '(Mage2Gen) '

	def __init__(self, *args, **kwargs):
		super(Mage2Gen, self).__init__(*args, **kwargs)
		self.package_name = ''
		self.module_name = ''
		self.description = ''

		self._snippets = self.load_snippets()
		self._module_snippets = defaultdict(list)

	def load_snippets(self):
		snippets = {}
		for name, obj in inspect.getmembers(mage2gen.snippets):
			if inspect.isclass(obj) and issubclass(obj, mage2gen.Snippet):
				snippets[name.lower().replace('snippet', '')] = obj
		return snippets

	def cmdloop(self):
		while True:
			try:
				super(Mage2Gen, self).cmdloop(intro="")
				self.postloop()
				break
			except KeyboardInterrupt as e:
				print("^C")

	def emptyline(self):
		return ''

	def ask_input(self, text, default=None, required=True, yes_no=False):
		default_label = ' [{}]'.format(default) if default else ''
		
		if yes_no:
			required = True
			default_label = ' [Y/n]' if default else ' [y/N]'

		while True:
			try:
				result = input('{}{}: '.format(text, default_label))
			except EOFError:
				sys.exit()

			if yes_no:
				if result in ['y', 'Y']:
					result = True
				elif result in ['n', 'N']:
					result = False
				elif default != None:
					result = default
				else:
					result = ''
			elif default != None and not result:
				result = default

			if required and result == '':
				continue

			break

		return result

	def preloop(self):
		self.package_name = self.ask_input('Package name', default='Mage2gen')
		self.module_name = self.ask_input('Module name')
		self.description = self.ask_input('Description', required=False)
		print('\nType help or ? to list commands.')

	def do_list(self, line):
		"""List available snippets"""
		print(' '.join(self._snippets))

	def do_add(self, line):
		"""Add a snippet to module"""
		SnippetClass = self._snippets.get(line)
		if SnippetClass:
			params = {}
			for arg_name, arg in inspect.signature(SnippetClass.add).parameters.items():
				if arg_name == 'self':
					continue

				default = arg.default if arg.default != arg.empty else None
				params[arg_name] =  self.ask_input(arg_name, default=default, yes_no=isinstance(default, bool))

			self._module_snippets[SnippetClass].append(params)

	def complete_add(self, text, line, begidx, endidx):
		return [s for s in self._snippets if s.startswith(text)]

	def do_generate(self, line):
		module = mage2gen.Module(package=self.package_name, name=self.module_name, description=self.description)

		# snippets
		for SnippetClass, kwargss in self._module_snippets.items():
			snippet = SnippetClass(module)
			for kwargs in kwargss:
				snippet.add(**kwargs)

		# generate 
		module.generate_module('gen')


	def do_EOF(self, line):
		return True

if __name__ == '__main__':
	Mage2Gen().cmdloop()